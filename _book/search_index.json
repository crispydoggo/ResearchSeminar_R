[["index.html", "Welcome", " Welcome These are the online lecture notes for empirical methods using R from Jaakko Meriläinen’s Research Seminar at ITAM. The lecture notes intend to give the students a basic knowledge regarding data wrangling and plotting: Installing packages Opening data Plotting simple graphs and plotting nicer graphs Combining data files Generating variables Also, in these notes, we cover the most appropriate empirical methods to make causal inferences for students to understand in a basic sense how we can perform the analysis with R: Running IV regressions Running simple diff-in-diffs Generating summary statistics tables Running t-tests Producing .tex tables Running RDD Using different kinds of standard errors "],["setting-r.html", "1 Setting R", " 1 Setting R R is a language and environment for statistical computing and graphics, which can be extended through packages. R was built as an open-source project, meaning every package and software is free! You can visit their site if you are interested in more technical aspects. To start using R, you need to install two complementary things: R: is the raw software that will run the code R Studio: is an Integrated Development Software (IDE), a computer application that provides comprehensive services to make it easier for the developer or programmer to develop software. Both installations are designed to be simple and accessible: R, The Comprehensive R Archive Network (CRAN), can be downloaded for any platform. After clicking the link, choose the appropriate (Linux, (Mac) OS X, or Windows) installation file for R. Download and install R on your computer. R studio provides the previous step and its installation in the following link. A nice overview of R Studio interface and windows can be found at RStudio Layout. The reference works through an R Studio server; since our recommendation and approach is to download R studio, you don’t have to worry about logging in. "],["r-basics.html", "2 R Basics 2.1 Installing Packages", " 2 R Basics Lucky for you, ITAM has an available GitHub Student Developer Pack for every active student! GitHub Education gives students hands-on experience with free access to various developer tools from GitHub partners. We recommend activating your free trial for DataCamp; it provides R, Python, SQL and more programming courses. I will give you one BIG cookie for every statement of accomplishment you achieve during this semester of DataCamp. If you don’t want to cover the basics in detail, try these small tutorials to familiarize yourself with the R syntax and RStudio: RStudio and Working Environment R syntax, basic objects and operations Further, we will cover some essential aspects just as the bare minimum requirements for understanding these notes to some extent. 2.1 Installing Packages As an open-source project, R has a universe of add-ons; additional content is included as a package. For every idea or problem you may encounter, someone has already worked on it and published it somewhere. To install a package, you need to type install.packages(\"package_name\") into the R console or an R script. Press the enter key if you are in the R console or press the shift + enter key if you are in an R script. install.packages(&quot;estimatr&quot;) # For robust standard errors To load a package, you must type library(package_name). Press the enter key if you are in the R console or press the shift + enter key if you are in an R script. library(estimatr) # Loading the library You only need to install a package once, but you must load a package every time you close and restart R; R needs to know which resources you plan to work with on each session. "],["data-wrangling.html", "3 Data wrangling 3.1 Data Set 3.2 Dplyr’s Wonder", " 3 Data wrangling Data manipulation is surprisingly easy with R. You only need the dplyr library included in the tidyverse package and know a few words. 3.1 Data Set This section will work with the Iris data set inherited as default R. Iris was introduced by Ronald Fisher in his 1936 paper The use of multiple measurements in taxonomic problems, contains three plant species (setosa, virginica, versicolor) and four features measured for each sample. # The datasets package needs to be loaded to access our data # For a full list of these datasets, type library(help = &quot;datasets&quot;) library(datasets) data(iris) Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 3.2 Dplyr’s Wonder dplyr package allows easy manipulation through “verbs” with a novel pipeline feature. The pipelines shine when you need to arrange many features, which is usually the case. dplyr verbs are the name of the functions to arrange the data; these include filter, mutate, arrange, group_by and more. The pipeline %&gt;% means take the name of the previous object and put it in the first argument of the next function. The pipelines shine when you need to arrange many features, which is usually the case. library(dplyr) # 1. Filter without dplyr example &lt;- filter(iris, Sepal.Width == 3.5) # 2. Filter with dplyr example &lt;- iris %&gt;% filter( Sepal.Width == 3.5) Here we will cover 3 basic verbs you might need in your journey; you can consult the most useful manipulation tips here. 1. Add or change variables library(dplyr) # 1. The mutate verb example &lt;- iris %&gt;% # A. You can add a complete new variable mutate( new_var = 3.3+6/5) %&gt;% # B. You can change current variables mutate( Sepal.Width = new_var + Sepal.Width) Sepal.Length Sepal.Width Petal.Length Petal.Width Species new_var 5.1 8.0 1.4 0.2 setosa 4.5 4.9 7.5 1.4 0.2 setosa 4.5 4.7 7.7 1.3 0.2 setosa 4.5 4.6 7.6 1.5 0.2 setosa 4.5 5.0 8.1 1.4 0.2 setosa 4.5 5.4 8.4 1.7 0.4 setosa 4.5 2. Filter the data set # 2. The filter verb example &lt;- iris %&gt;% # A. You can filter with specific logical criteria filter( Sepal.Length &gt; 5) %&gt;% # B. You can add multiple conditions filter( Sepal.Length &gt; 5, Sepal.Width &lt; 3) Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.5 2.3 4.0 1.3 versicolor 6.5 2.8 4.6 1.5 versicolor 5.7 2.8 4.5 1.3 versicolor 6.6 2.9 4.6 1.3 versicolor 5.2 2.7 3.9 1.4 versicolor 6.0 2.2 4.0 1.0 versicolor 3. Select variables of interest # 3. The select verb example &lt;- iris %&gt;% # A. You can select existing variables select( Sepal.Length, Sepal.Width, Species) %&gt;% # B. You can also remove just one select( -Species) Sepal.Length Sepal.Width 5.1 3.5 4.9 3.0 4.7 3.2 4.6 3.1 5.0 3.6 5.4 3.9 "],["joining-data.html", "4 Joining Data 4.1 Join verbs", " 4 Joining Data In your thesis journey, you might need to use diverse datasets, most of which are relational databases. Relational databases are datasets that can be linked to another through a common key; the key is usually a unique identifier such as IDs or your own Clave Única. Figure 4.1: Source Heavy.AI You can perform multiple forms of joining data with the dplyr package in R. All joins have a similar structure: # Join Verb Structure (not code) data &lt;- data_to_join %&gt;% name_of_join( by = &quot;key_name&quot;) 4.1 Join verbs We leave the data joining and relational data bases criteria to the experts through this comprehensive resource. We will only cover the most common type of join, the left join. Left Join The left join prioritizes the first table you present; it returns all rows in the left table and matching rows in the right table. Figure 4.2: Source TidyExplain If there is no match for any of the rows in the left table, all the results of the first table are still displayed, and NA is used if no matching rows are found in the right table. Here’s the syntax: # Left Join data &lt;- data_2 %&gt;% left_join( by = &quot;key&quot;) "],["plotting-with-r.html", "5 Plotting with R 5.1 The magic of ggplot2 5.2 Ggthemes 5.3 Export your graph", " 5 Plotting with R 5.1 The magic of ggplot2 You will probably present exciting results with the help of figures and plots. The ggplot2 package allows us to design beautiful graphs with relatively low effort in R. ggplot2 is designed to build up graphs in 4 steps: Figure 5.1: Source DataCamp 1. Data The first step is to provide a data set from which the data will be taken. library(tidyverse) # 1. Let&#39;s generate some data x &lt;- 1:30 y &lt;- rnorm(30) # random numbers from a normal distribution label &lt;- x &lt; 15 # True / False boolean vector data &lt;- tibble(x,y, label) # data frame (tibble) object 2. Aesthetics The second step is to specify which data set elements will be mapped to an excellent plot. # 2. Specify Elements graph &lt;- ggplot(data, # Specify the data set aes(x,y, color = label)) # Specify the elements to map graph # We expect a blank canvas 3. Geometrics Now that we have specified where the data is coming from and which elements we will use, we need to tell ggplot how we want to visualize the data, i.e., the plotting (geom in ggplot2). # 3. Specifiy how to plot the data graph &lt;- ggplot(data, # Specify the data set aes(x,y, color = label)) + # Specify the elements to map geom_point() + # Scatter Plot geom_line() # Line Plot graph # We now see the points! 4. Themes Finally, we can tell ggplot how we want the look and feel of our graph. Do we want a bold font or large font? You can change every aspect of the graph with the theme() function. # 4. Personalize your graph! graph &lt;- ggplot(data, # Specify the data set aes(x,y, color = label)) + # Specify the elements to map geom_point() + # Scatter Plot geom_line() + # Line Plot theme(plot.title = element_text(face = &quot;bold&quot;, colour = &quot;Black&quot;, size = 12)) # Add theme # Print graph graph ggplot2 has the novelty of identifying the graphs as objects, which means that we can store graphs in variables and lists. Further, we can add more elements to a stored value with the +operator. # In the last example we forgot to add labels graph + labs(y = &quot;y&quot;, x = &quot;x&quot;, title = &quot;Figure 1: Plotting with style&quot;, subtitle = &quot;Jaakko&#39;s Online Resources&quot;, colour = NULL, caption = &quot; Source: god&quot;) 5.2 Ggthemes Even with full customization, trying different styles to best suit your graph could be exhausting. That’s why ggplot2 and other friendly people online have developed pre-defined themes for you to use with one line of code! Ggplot themes BBC Style Ggthemes (expansion) GGtech # Let&#39;s try The Economist style! library(ggthemes) graph + theme_economist() 5.3 Export your graph Finally, you would like to export your graph so you can use it in diverse document formats. Here’s how to save a ggplot in various formats from pdf to png. We will only cover the most used one, the png type. dir.create(dirname(&quot;./plot_jaakko.png&quot;), showWarnings = FALSE) # 1. Open png file png(filename = &quot;./plot_jaakko.png&quot;, width = 1300, height = 1200, # We can specify resolution and quality units = &quot;px&quot;, res = 300, pointsize = 11) # 2. Create the plot graph + theme_economist() # 3. Close the file dev.off() "],["fancy-tables.html", "6 Fancy Tables 6.1 Guides for styling 6.2 Latex 6.3 For Word", " 6 Fancy Tables If you are working with data, you would like to present tables comprehensibly. The R package suited for this task is kable and kableExtra. 6.1 Guides for styling kable and kableExtra let us display fancy tables in latex or html formats. We can export those tables as png or .tex files to have reproducible examples: HTML Kable Guide PDF/latex Kable Guide 6.2 Latex knitr::kable() returns a character vector, which you can write to a file, e.g., table &lt;- knitr::kable(data, format = &#39;latex&#39;) writeLines(table, &#39;table.tex&#39;) 6.3 For Word Alternatively, you can save your tables as png files. # If you want to save the image locally, provide a name webshot::install_phantomjs() # 1. Generate Table kbl(data, booktabs = T) %&gt;% # 2. Specify style column_spec(1, bold = T) %&gt;% # 3. Save and export save_kable(&quot;my_latex_table.png&quot;) "],["empirical-methods-resources.html", "7 Empirical methods resources", " 7 Empirical methods resources From now on, we will implement an event study case based on an empirical paper to illustrate in practice how the analysis is made. The examples follow the empirical exercises of Jaakko’s graduate course Tópicos de Microeconomía at ITAM. Exercises Resources "],["exercise-1-instrumental-variables.html", "8 Exercise 1: Instrumental Variables 8.1 Packages and Data 8.2 Paper Discussion 8.3 Endogeneity Discussion 8.4 Instrumental Variables 8.5 IV Part 2", " 8 Exercise 1: Instrumental Variables In this exercise, we will replicate some of the results of the paper “The Colonial Origins of Comparative Development: An Empirical Investigation” by Acemoglu, Johnson, and Robinson. This paper was published in the American Economic Review in 2003. You can find the paper, its data, and Jaakko’s exercise here: Exercise 1 For the theory and context of the method, check Chapter 7 of Scott Cunningham’s Causal Inference Mixtape. 8.1 Packages and Data We will use the following packages: install them before loading them. # 1. Data arrange, importing data, strings and more. Check what it includes! library(tidyverse) # 2. Read .dta Format library(haven) # 3. Robust standard errors library(estimatr) # 4. ivreg: instrumental variables library(ivreg) We read the data, In our case, the data is stored in a folder named “Data” within the R project. You should specify your data’s directory. MI &lt;- read_dta(&quot;./Data/final_dataset_MI.dta&quot;) table5 &lt;- read_dta(&quot;./Data/maketable5.dta&quot;) Further, we only select the variables of interest and clean the NA’s. # 1. Select Variables of Interest MI &lt;- MI %&gt;% select( change10_ineq, pre_demo_ineg_best, acemoglu_demo, ccodealp) # 2. Remove NA&#39;s MI &lt;- MI %&gt;% filter( !is.na(change10_ineq)) 8.2 Paper Discussion Acemoglu et al. study institutions with more secure property rights and less distortionary policies; they are referred to as “good institutions”. They are measured with the Average Protection Against Expropriation Risk, which is measured on a scale from 0 to 10. Their main finding regards the role of institutions in development: the higher the protection of property rights, the higher the income per capita. 8.3 Endogeneity Discussion Institutions may be endogenous for various reasons. Acemoglu et al. thus use an instrumental variables approach. The proposed instrument is the mortality of settlers; they justify it by arguing that the mortality of settlers doesn’t affect the GDP per capita today. Yet, the exclusion restriction states that the instrument \\(Z\\) must also be uncorrelated with the error term, \\(\\epsilon\\). A threat is that past health determines current health; thus, past health is correlated with GDP. Although, they justify the uncorrelatedness of mortality with GDP by arguing that the natives were resilient to the diseases that killed the settlers. 8.4 Instrumental Variables Let’s plot a nice-looking graph illustrating the relationship between the outcome variable and the instrument. ggplot(filter(table5, f_french + f_brit &gt;= 1), aes( y = logpgp95, x = logem4, label = shortnam)) + geom_point() + geom_smooth(method = &quot;lm&quot;, se = FALSE) + scale_y_continuous(limits = c(4, 10)) + labs(x = &quot;Log of Settler Mortality&quot;, y = &quot; Log GDP Per-Capita 1995&quot;, title = &quot;Figure 1. Reduced form Relationship &quot;)+ geom_text(hjust=0, vjust=0) + theme_classic() Then, let us have a look at the reduced-form regression more formally. Run the regressions in part (b) but replace institutional quality with the instrumental variable. Briefly discuss the regression results. f1 &lt;- lm(logpgp95 ~ logem4, data = table5) summary(f1) ## ## Call: ## lm(formula = logpgp95 ~ logem4, data = table5) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2.71304 -0.53326 0.01954 0.47188 1.44673 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 10.66025 0.30528 34.92 &lt; 2e-16 *** ## logem4 -0.56412 0.06389 -8.83 2.09e-13 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.7563 on 79 degrees of freedom ## (82 observations deleted due to missingness) ## Multiple R-squared: 0.4967, Adjusted R-squared: 0.4903 ## F-statistic: 77.96 on 1 and 79 DF, p-value: 2.094e-13 We note that the F-Statistic is 77.96 , therefore the instrument is strong. 8.5 IV Part 2 Try now repeating the regressions in part (b) using IV estimation. Discuss both the first stage and 2SLS results. Try also locating the first-stage F statistic in the regression output. Is the instrument weak or strong? Do you know why it is important to have a strong instrument? Run then the following OLS regressions, and use robust standard errors: Regress the outcome variable on institutional quality, no controls Regress the outcome variable on institutional quality, and control for an indicator for French legal origin, being a former French colony, share of Catholics, share of Muslims, and share of other than Catholic/Protestant/Muslim lm_2 &lt;- lm_robust(logpgp95 ~ sjlofr + f_french + avexpr + catho80 + muslim80 + no_cpm80 , data = table5) summary(lm_2) ## ## Call: ## lm_robust(formula = logpgp95 ~ sjlofr + f_french + avexpr + catho80 + ## muslim80 + no_cpm80, data = table5) ## ## Standard error type: HC2 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 4.6663414 0.403283 11.5709 2.131e-20 3.866617 5.4660660 104 ## sjlofr 0.2124659 0.227705 0.9331 3.529e-01 -0.239082 0.6640135 104 ## f_french -0.2827433 0.199424 -1.4178 1.592e-01 -0.678208 0.1127215 104 ## avexpr 0.5417709 0.035225 15.3802 1.521e-28 0.471918 0.6116239 104 ## catho80 0.0009357 0.002681 0.3491 7.277e-01 -0.004380 0.0062514 104 ## muslim80 -0.0012009 0.003041 -0.3949 6.937e-01 -0.007231 0.0048291 104 ## no_cpm80 -0.0063496 0.002810 -2.2598 2.592e-02 -0.011922 -0.0007776 104 ## ## Multiple R-squared: 0.6701 , Adjusted R-squared: 0.651 ## F-statistic: 101.8 on 6 and 104 DF, p-value: &lt; 2.2e-16 Regress the outcome variable on institutional quality, control for location of the capital (absolute latitude), an indicator for French legal origin, being a former French colony, share of Catholics, share of Muslims, and share of other than Catholic/Protestant/Muslim lm_3 &lt;- lm_robust(logpgp95 ~ avexpr + lat_abst + sjlofr + f_french + catho80 + muslim80 + no_cpm80 , data = table5) summary(lm_3) ## ## Call: ## lm_robust(formula = logpgp95 ~ avexpr + lat_abst + sjlofr + f_french + ## catho80 + muslim80 + no_cpm80, data = table5) ## ## Standard error type: HC2 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 4.7837413 0.411063 11.6375 1.742e-20 3.968495 5.598987 103 ## avexpr 0.4769486 0.056589 8.4283 2.246e-13 0.364718 0.589179 103 ## lat_abst 0.8427422 0.522582 1.6126 1.099e-01 -0.193677 1.879161 103 ## sjlofr 0.2143537 0.220776 0.9709 3.339e-01 -0.223504 0.652211 103 ## f_french -0.2961695 0.189465 -1.5632 1.211e-01 -0.671928 0.079589 103 ## catho80 0.0022475 0.002708 0.8298 4.086e-01 -0.003124 0.007619 103 ## muslim80 -0.0003111 0.003005 -0.1035 9.177e-01 -0.006270 0.005648 103 ## no_cpm80 -0.0047503 0.003049 -1.5579 1.223e-01 -0.010798 0.001297 103 ## ## Multiple R-squared: 0.6798 , Adjusted R-squared: 0.658 ## F-statistic: 98.54 on 7 and 103 DF, p-value: &lt; 2.2e-16 What is the relationship between institutional quality and income levels? There is a positive relationship between institutional quality and income levels. Is this relationship statistically significant and robust to the inclusion of additional control variables? The relationship is statistically significant in the three cases; nevertheless, with additional control variables the effect of institutional quality decreases. Regress the outcome variable on institutional quality, no controls iv1 &lt;- ivreg(logpgp95 ~ avexpr | logem4, data = table5) summary(iv1) ## ## Call: ## ivreg(formula = logpgp95 ~ avexpr | logem4, data = table5) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2.28175 -0.55059 0.03401 0.62273 1.57418 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.3702 0.8376 2.830 0.00612 ** ## avexpr 0.8684 0.1250 6.946 1.77e-09 *** ## ## Diagnostic tests: ## df1 df2 statistic p-value ## Weak instruments 1 68 29.80 7.29e-07 *** ## Wu-Hausman 1 67 25.17 4.11e-06 *** ## Sargan 0 NA NA NA ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.8899 on 68 degrees of freedom ## Multiple R-Squared: 0.3045, Adjusted R-squared: 0.2942 ## Wald test: 48.25 on 1 and 68 DF, p-value: 1.771e-09 Regress the outcome variable on institutional quality, and control for an indicator for French legal origin, being a former French colony, share of Catholics, share of Muslims, and share of other than Catholic/Protestant/Muslim iv2 &lt;- ivreg(logpgp95 ~ sjlofr + f_french + catho80 + muslim80 + no_cpm80 | avexpr | logem4 , data = table5) summary(iv2) ## ## Call: ## ivreg(formula = logpgp95 ~ sjlofr + f_french + catho80 + muslim80 + ## no_cpm80 | avexpr | logem4, data = table5) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.8545 -0.5175 0.0298 0.5221 2.0379 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.5946375 1.2043687 2.154 0.035 * ## avexpr 0.8943097 0.1374527 6.506 1.44e-08 *** ## sjlofr 0.3014438 0.3462820 0.871 0.387 ## f_french 0.1505522 0.3184417 0.473 0.638 ## catho80 -0.0007391 0.0090070 -0.082 0.935 ## muslim80 -0.0081192 0.0078708 -1.032 0.306 ## no_cpm80 -0.0136571 0.0087471 -1.561 0.123 ## ## Diagnostic tests: ## df1 df2 statistic p-value ## Weak instruments 1 63 21.08 2.16e-05 *** ## Wu-Hausman 1 62 21.92 1.60e-05 *** ## Sargan 0 NA NA NA ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.8005 on 63 degrees of freedom ## Multiple R-Squared: 0.4786, Adjusted R-squared: 0.4289 ## Wald test: 11.31 on 6 and 63 DF, p-value: 1.541e-08 Regress the outcome variable on institutional quality, control for location of the capital (absolute latitude), an indicator for French legal origin, being a former French colony, share of Catholics, share of Muslims, and share of other than Catholic/Protestant/Muslim iv3 &lt;- ivreg(logpgp95 ~ lat_abst + sjlofr + f_french + catho80 + muslim80 + no_cpm80 | avexpr | logem4, data = table5) summary(iv3) ## ## Call: ## ivreg(formula = logpgp95 ~ lat_abst + sjlofr + f_french + catho80 + ## muslim80 + no_cpm80 | avexpr | logem4, data = table5) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2.40964 -0.65770 -0.02513 0.75136 2.58007 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.547088 2.148742 0.720 0.4742 ## avexpr 1.131255 0.348786 3.243 0.0019 ** ## lat_abst -2.051906 1.954973 -1.050 0.2980 ## sjlofr 0.363177 0.455680 0.797 0.4285 ## f_french 0.266396 0.432506 0.616 0.5402 ## catho80 -0.002328 0.011631 -0.200 0.8420 ## muslim80 -0.008077 0.010076 -0.802 0.4259 ## no_cpm80 -0.017948 0.012144 -1.478 0.1445 ## ## Diagnostic tests: ## df1 df2 statistic p-value ## Weak instruments 1 62 5.943 0.017657 * ## Wu-Hausman 1 61 15.599 0.000206 *** ## Sargan 0 NA NA NA ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.025 on 62 degrees of freedom ## Multiple R-Squared: 0.1593, Adjusted R-squared: 0.06439 ## Wald test: 6.344 on 7 and 62 DF, p-value: 1.238e-05 By examinating the weak instrument F statistic, only in the third case by implementing the location of the capital (absolute latitude) the instrument is weak with an F statistic of 5.93 &lt; 10. "],["rdd.html", "9 RDD", " 9 RDD Work in progress, sorry :( "],["dd.html", "10 DD", " 10 DD Work in progress, sorry :( "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
